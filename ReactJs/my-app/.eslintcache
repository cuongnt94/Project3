[{"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\index.js":"1","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\App.js":"2","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Summary\\Summary.js":"4","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\TimeSheet\\TimeSheet.js":"5","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Profile\\Profile.js":"6","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Login\\Login.js":"7"},{"size":595,"mtime":1608224096005,"results":"8","hashOfConfig":"9"},{"size":1622,"mtime":1608313155975,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3175,"mtime":1608314116313,"results":"12","hashOfConfig":"9"},{"size":13164,"mtime":1608313731843,"results":"13","hashOfConfig":"9"},{"size":4547,"mtime":1608313737711,"results":"14","hashOfConfig":"9"},{"size":2015,"mtime":1608313492431,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1azahb5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\index.js",[],["34","35"],"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\App.js",[],"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Summary\\Summary.js",["36","37","38","39"],"C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\TimeSheet\\TimeSheet.js",["40","41"],"import React, { Component } from 'react';\r\n\r\nimport 'react-day-picker/lib/style.css';\r\nimport axios from 'axios'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport { DateUtils } from 'react-day-picker';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\n\r\nclass TimeSheet extends Component {\r\n    /*constructor(props) {\r\n       super(props)\r\n       const [state, setState] = useState({\r\n        weekEnding: \"\",\r\n        billingHours: \"\",\r\n        compensatedHours: \"\",\r\n        startingTime: true,\r\n        endingTime: \"master\",\r\n        totalHours: \"\",\r\n        floatingDay: false,\r\n        holiday: false,\r\n        vacation: false\r\n      });\r\n    }*/\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            //unit: {\r\n                selectedDay: undefined,\r\n                isEmpty: true,\r\n                isDisabled: false,\r\n                weekEnding: \"\",\r\n                billingHours: \"32\",\r\n                compensatedHours: \"40\",\r\n                startingTime: \"N/A\",\r\n                endingTime: \"N/A\",\r\n                totalHours: 0,\r\n                dayOff: \"\",\r\n            //}\r\n    \r\n            selectedFile: null,\r\n            data: null,\r\n            token: props.token,\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount()\r\n    {\r\n        var payload={\r\n            \"token\":this.state.token,\r\n        }\r\n   \r\n        this.setState({data: axios.get('localhost:8000/project/timesheet/getShortTimesheet')\r\n               .then(function (response) {\r\n               console.log(response);\r\n               if(response.data.code == 200){\r\n               console.log(\"Getting data successfully\");\r\n               console.log(this.state.data);\r\n               }\r\n               else{\r\n               console.log(\"Fail to get data\");\r\n               alert(\"Invalid Data from Backend\");\r\n               }\r\n               })\r\n               .catch(function (error) {\r\n               console.log(error);\r\n            })\r\n        })\r\n    }\r\n\r\n    onFileChange = event => { \r\n        // Update the state \r\n        this.setState({ selectedFile: event.target.files[0],\r\n            loaded: 0, });    \r\n    };\r\n\r\n    onFileUpload = () => { \r\n        // Create an object of formData \r\n        const formData = new FormData(); \r\n       \r\n        // Update the formData object \r\n        formData.append( \r\n          \"myFile\", \r\n          this.state.selectedFile, \r\n          this.state.selectedFile.name \r\n        ); \r\n       \r\n        // Details of the uploaded file \r\n        console.log(this.state.selectedFile); \r\n       \r\n        // Request made to the backend api \r\n        // Send formData object \r\n        axios.post(\"localhost:8000/project/timesheet/getTimesheet\", formData); \r\n    };\r\n    \r\n    fileData = () => { \r\n        if (this.state.selectedFile) { \r\n          return ( \r\n            <div> \r\n              <h2>File Details:</h2> \r\n              <p>File Name: {this.state.selectedFile.name}</p> \r\n              <p>File Type: {this.state.selectedFile.type}</p> \r\n              <p> \r\n                Last Modified:{\" \"} \r\n                {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n              </p> \r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        const value = evt.target.value;\r\n        if(value === \"floatingDay\" || value === \"holiday\" || value === \"vacation\")\r\n        {\r\n            this.setState({\r\n                ...this.state,\r\n                [evt.target.name]: value,\r\n                startingTime: \"N/A\",\r\n                endingTime: \"N/A\",\r\n                totalHours: 0,\r\n            })\r\n            return\r\n        }\r\n        this.setState({\r\n          ...this.state,\r\n          [evt.target.name]: value\r\n        });\r\n    }\r\n\r\n    handleDayChange = (selectedDay, modifiers, dayPickerInput) => {\r\n        const input = dayPickerInput.getInput();\r\n        this.setState({\r\n            selectedDay: input.value,\r\n            isEmpty: !input.value.trim(),\r\n            isDisabled: modifiers.disabled === true,\r\n        });\r\n    }\r\n\r\n    parseDate = (str, format, locale) => {\r\n        const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n        if (DateUtils.isDate(parsed)) {\r\n          return parsed;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    formatDate = (date, format, locale) => {\r\n        return dateFnsFormat(date, format, { locale });\r\n    }\r\n\r\n    save = () => {\r\n        \r\n        //axios.post(\"localhost:8000/project/timesheet/getTimesheet\", formData)\r\n    }\r\n\r\n    render() {\r\n       return (\r\n            <div class = \"container\">\r\n                <form>\r\n                    <div class = \"col\">\r\n                        <div class = \"row\">\r\n                            <div class = \"col\">\r\n                                <DayPickerInput\r\n                                    formatDate={this.formatDate}\r\n                                    format={'MM/dd/yyyy'}\r\n                                    parseDate={this.parseDate}\r\n                                    placeholder={`${dateFnsFormat(new Date(), 'MM/dd/yyyy')}`}\r\n                                    value={this.state.selectedDay} \r\n                                    onDayChange={this.handleDayChange} \r\n                                    dayPickerProps={{\r\n                                        selectedDays: this.state.selectedDay,\r\n                                        disabledDays: {\r\n                                        daysOfWeek: [0, 6],\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div class = \"col\">Total Billing Hours: {this.state.billingHours}</div>\r\n                            <div class = \"col\">Total Compensated Hours: {this.state.compensatedHours}</div>\r\n                        </div>\r\n                        <div>\r\n                            <table class=\"table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th>Day</th>\r\n                                    <th>Date</th>\r\n                                    <th>Starting Time</th>\r\n                                    <th>Ending Time</th>\r\n                                    <th>Total Hours</th>\r\n                                    <th>Floating Day</th>\r\n                                    <th>Holiday</th>\r\n                                    <th>Vacation</th>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        {this.state.selectedDay}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.state.selectedDay}\r\n                                    </td>\r\n                                    <td>\r\n                                        <label>\r\n                                            <select name=\"startingTime\" onChange={this.handleChange} value={this.state.startingTime}>\r\n                                                <option value=\"N/A\">N/A</option>\r\n                                                <option value=\"8am\">8 AM</option>\r\n                                                <option value=\"9am\">9 AM</option>\r\n                                                <option value=\"10am\">10 AM</option>\r\n                                                <option value=\"11am\">11 AM</option>\r\n                                                <option value=\"12am\">12 PM</option>\r\n                                                <option value=\"1pm\">1 PM</option>\r\n                                                <option value=\"2pm\">2 PM</option>\r\n                                                <option value=\"3pm\">3 PM</option>\r\n                                                <option value=\"4pm\">4 PM</option>\r\n                                                <option value=\"5pm\">5 PM</option>\r\n                                                <option value=\"6pm\">6 PM</option>\r\n                                            </select>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <label>\r\n                                            <select name=\"endingTime\" onChange={this.handleChange} value={this.state.endingTime}>\r\n                                                <option value=\"N/A\">N/A</option>\r\n                                                <option value=\"8am\">8 AM</option>\r\n                                                <option value=\"9am\">9 AM</option>\r\n                                                <option value=\"10am\">10 AM</option>\r\n                                                <option value=\"11am\">11 AM</option>\r\n                                                <option value=\"12am\">12 PM</option>\r\n                                                <option value=\"1pm\">1 PM</option>\r\n                                                <option value=\"2pm\">2 PM</option>\r\n                                                <option value=\"3pm\">3 PM</option>\r\n                                                <option value=\"4pm\">4 PM</option>\r\n                                                <option value=\"5pm\">5 PM</option>\r\n                                                <option value=\"6pm\">6 PM</option>\r\n                                            </select>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <label>\r\n                                            <select name=\"totalHours\" onChange={this.handleChange} value={this.state.totalHours}>\r\n                                                <option value=\"0\">0</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\">5</option>\r\n                                                <option value=\"6\">6</option>\r\n                                                <option value=\"7\">7</option>\r\n                                                <option value=\"8\">8</option>\r\n                                                <option value=\"9\">9</option>\r\n                                                <option value=\"10\">10</option>\r\n                                            </select>\r\n                                        </label>\r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        <input type =\"radio\" name =\"dayOff\" value =\"floatingDay\"\r\n                                        checked={this.state.dayOff === \"floatingDay\"}\r\n                                        onChange={this.handleChange}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type =\"radio\" name =\"dayOff\" value =\"holiday\"\r\n                                        checked={this.state.dayOff === \"holiday\"}\r\n                                        onChange={this.handleChange}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type =\"radio\" name =\"dayOff\" value =\"vacation\"\r\n                                        checked={this.state.dayOff === \"vacation\"}\r\n                                        onChange={this.handleChange}/>\r\n                                    </td>\r\n                                    \r\n                                </tr>\r\n\r\n                            </tbody>    \r\n                            </table>\r\n                        </div>\r\n\r\n                        <div class = \"row\">\r\n                            <div>\r\n                                <input type=\"file\" onChange={this.onFileChange} /> \r\n                                <button onClick={this.onFileUpload}> \r\n                                    Upload! \r\n                                </button> \r\n                            </div>\r\n                            <div class=\"float-right\">\r\n                                <button type=\"button\" onClick={this.save}>SAVE</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                \r\n\r\n                </form>\r\n                <pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n export default TimeSheet;","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Profile\\Profile.js",["42","43","44","45","46"],"import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport DayPicker from 'react-day-picker';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport axios from 'axios'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Profile.css';\r\nclass Profile extends Component {\r\n    state = {\r\n        phone: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        emergencyName1: \"\",\r\n        emergencyPhone1: \"\",\r\n        emergencyName2: \"\",\r\n        emergencyPhone2: \"\",\r\n\r\n        user: null,\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        var payload={\r\n            \"token\":this.state.token,\r\n        }\r\n   \r\n        this.setState({data: axios.get('localhost:8000/project/contact/getcontact')\r\n               .then(function (response) {\r\n               console.log(response);\r\n               if(response.data.code == 200){\r\n               console.log(\"Getting data successfully\");\r\n               console.log(this.state.data);\r\n               }\r\n               else{\r\n               console.log(\"Fail to get data\");\r\n               alert(\"Invalid Data from Backend\");\r\n               }\r\n               })\r\n               .catch(function (error) {\r\n               console.log(error);\r\n            })\r\n        })\r\n    }\r\n    \r\n    handleChange = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState({\r\n          ...this.state,\r\n          [evt.target.name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n       return (\r\n            <div className=\"app\">\r\n                <form>\r\n                    <label>\r\n                        <div className=\"heading\">Contact</div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"phone number\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"email\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={this.state.address}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"address\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <div className=\"heading\">Emergency Contact 1</div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"emergencyName1\"\r\n                            value={this.state.emergencyName1}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"name\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"emergencyPhone1\"\r\n                            value={this.state.emergencyPhone1}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"phone number\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <div className=\"heading\">Emergency Contact 2</div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"emergencyName2\"\r\n                            value={this.state.emergencyName2}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"name\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"emergencyPhone2\"\r\n                            value={this.state.emergencyPhone2}\r\n                            onChange={this.handleChange}\r\n                            placeholder = \"phone number\"\r\n                        />\r\n                    </label>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n export default Profile;","C:\\Users\\Cuong\\OneDrive\\Desktop\\Project3\\Project3\\ReactJs\\my-app\\src\\containers\\Login\\Login.js",["47","48"],"import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport TextField from 'material-ui/TextField';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        email:'',\r\n        password:'',\r\n        token:''\r\n        }\r\n       }\r\n  state = {email: \"\", password: \"\"}\r\n  handleClick(event){\r\n    var apiBaseUrl = \"http://localhost:9999/auth\";\r\n    var self = this;\r\n    var payload={\r\n    \"email\":this.state.email,\r\n    \"password\":this.state.password\r\n    }\r\n    console.log(apiBaseUrl+'/login')\r\n    axios.post(apiBaseUrl+'/login', payload)\r\n    .then(response => {\r\n            console.log(response);\r\n        console.log(response.data)\r\n        if(response.data != 401){\r\n            console.log(\"Login Successful\" + response.data);\r\n            this.token = response.data;\r\n            alert(\"Login Successful\"+ this.token);\r\n\r\n            }\r\n            else{\r\n            console.log(\"Invalid Login\" + response.data);\r\n            alert(\"Invalid Login\"+ response.data);\r\n            }\r\n    })\r\n    \r\n  \r\n    }\r\nrender(){\r\n  return (\r\n    <div>\r\n        <MuiThemeProvider>\r\n          <div>\r\n           <TextField\r\n             hintText=\"Enter your email\"\r\n             floatingLabelText=\"Email\"\r\n             onChange = {(event,newValue) => this.setState({email:newValue})}\r\n             />\r\n           <br/>\r\n             <TextField\r\n               type=\"password\"\r\n               hintText=\"Enter your Password\"\r\n               floatingLabelText=\"Password\"\r\n               onChange = {(event,newValue) => this.setState({password:newValue})}\r\n               />\r\n             <br/>\r\n             <RaisedButton label=\"Submit\" primary={true} onClick={(event) => this.handleClick(event)}/>\r\n         </div>\r\n         </MuiThemeProvider>\r\n      </div>\r\n    );\r\n    }\r\n    \r\n}\r\nexport default Login;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":25,"column":11,"nodeType":"55","messageId":"56","endLine":25,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":32,"column":35,"nodeType":"60","messageId":"61","endLine":32,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":87,"column":13,"nodeType":"64","endLine":87,"endColumn":68},{"ruleId":"53","severity":1,"message":"57","line":54,"column":13,"nodeType":"55","messageId":"56","endLine":54,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":61,"column":38,"nodeType":"60","messageId":"61","endLine":61,"endColumn":40},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"65","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":17},{"ruleId":"53","severity":1,"message":"66","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":24,"column":13,"nodeType":"55","messageId":"56","endLine":24,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":31,"column":38,"nodeType":"60","messageId":"61","endLine":31,"endColumn":40},{"ruleId":"53","severity":1,"message":"67","line":20,"column":9,"nodeType":"55","messageId":"56","endLine":20,"endColumn":13},{"ruleId":"58","severity":1,"message":"68","line":30,"column":26,"nodeType":"60","messageId":"61","endLine":30,"endColumn":28},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'payload' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DayPicker' is defined but never used.","'DatePicker' is defined but never used.","'self' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]